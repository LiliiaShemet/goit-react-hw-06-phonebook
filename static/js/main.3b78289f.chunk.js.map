{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/FilterContact/FilterContact.module.scss","components/Container/Container.module.scss","redux/actions.js","components/ContactForm/ContactForm.js","components/ContatctList/ContactList.js","components/FilterContact/FilterContact.js","components/Section/Section.js","components/Container/Container.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContatctList/ContactList.module.scss"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","ContactForm","dispatch","useDispatch","items","useSelector","state","contacts","useState","setName","setNumber","handleChange","e","currentTarget","value","Error","reset","className","s","form","onSubmit","preventDefault","find","item","alert","form__input","onChange","type","pattern","title","required","btn","Contacts","filter","filteredContacts","toLowerCase","includes","filterList","map","filterListItem","text","span","onClick","FilterContact","label","filterInput","target","Section","children","Container","container","App","ContactList","createReducer","actions","_","contactReducers","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","rootReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3b78289f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__38uJE\",\"form__input\":\"ContactForm_form__input__fzR9g\",\"btn\":\"ContactForm_btn__18rTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContact_label__OFkC6\",\"filterInput\":\"FilterContact_filterInput__3-jLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2suPk\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contact/add', (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nexport const deleteContact = createAction('contact/delete');\r\nexport const filterContact = createAction('contact/filter');\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addContact } from \"../../redux/actions\";\r\nimport s from \"./ContactForm.module.scss\";\r\n\r\nfunction ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const { items } = useSelector(state => state.contacts);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    const value = e.currentTarget.name;\r\n    switch (value) {\r\n      case \"name\":\r\n        setName(e.currentTarget.value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(e.currentTarget.value);\r\n        break;\r\n\r\n      default:\r\n        throw new Error();\r\n    }\r\n  };\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    if (items.find(item => name === item.name)) {\r\n      alert(`${name} is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n    dispatch(addContact(name, number));\r\n\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmitForm}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          onChange={handleChange}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          onChange={handleChange}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.btn}>add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import s from \"./ContactList.module.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  const filteredContacts = [...contacts].filter(({ name }) =>\r\n    name.toLowerCase().includes(filter)\r\n  );\r\n\r\n  return (\r\n    <ul className={s.filterList}>\r\n      {filteredContacts.map(({ id, number, name }) => (\r\n        <li className={s.filterListItem} key={id}>\r\n          <p className={s.text}>\r\n            {name}: <span className={s.span}>{number}</span>\r\n          </p>\r\n\r\n          <button\r\n            className={s.btn}\r\n            onClick={() => dispatch(deleteContact(id))}\r\n            type=\"button\"\r\n          >\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import s from \"./FilterContact.module.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterContact } from \"../../redux/actions\";\r\n\r\nconst FilterContact = () => {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filterInput}\r\n        onChange={e => dispatch(filterContact(e.target.value))}\r\n        value={value}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FilterContact;\r\n","const Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import s from './Container.module.scss';\r\nimport React from 'react';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContatctList\";\r\nimport FilterContact from \"./components/FilterContact\";\r\nimport Section from \"./components/Section\";\r\nimport Container from \"./components/Container\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container className=\"App\">\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <FilterContact />\r\n        <ContactList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactReducers = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport { contactReducers } from \"./reducers\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducers,\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={\"loading....\"} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterList\":\"ContactList_filterList__1RnqN\",\"filterListItem\":\"ContactList_filterListItem__3oOHj\",\"text\":\"ContactList_text__2vSOh\",\"span\":\"ContactList_span__scqRn\",\"btn\":\"ContactList_btn__3-ZjF\"};"],"sourceRoot":""}